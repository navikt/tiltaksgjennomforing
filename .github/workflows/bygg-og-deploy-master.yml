name: Bygg og deploy master

on:
  push:
    branches:
      - 'master'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  IMAGE_BASE: docker.pkg.github.com/${{ github.repository }}/tiltaksgjennomforing
  IMAGE: docker.pkg.github.com/${{ github.repository }}/tiltaksgjennomforing:${{ github.sha }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

jobs:
  bygg:
    name: Bygg
    runs-on: ubuntu-latest
    steps:
      - name: Lukk deployment-issues
        uses: actions/github-script@0.5.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['deploy']
            }).then(response => {
              response.data.forEach(issue => {
                github.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed'
                });
              });
            });

      - name: Sjekk ut kode
        uses: actions/checkout@v2

      - name: Installer avhengigheter (npm ci)
        run: npm ci --no-optional

      - name: Kj√∏r tester (npm test)
        run: npm test

      - name: Bygg (npm run build)
        run: npm run build

      - name: Bygg, tag og push Docker-image
        run: |
          docker build --tag $IMAGE --tag $IMAGE_BASE:latest .
          echo $GITHUB_TOKEN | docker login docker.pkg.github.com -u $GITHUB_REPOSITORY --password-stdin
          docker push $IMAGE_BASE

  deploy-dev-fss:
    name: Deploy til dev-fss
    runs-on: ubuntu-latest
    needs: bygg
    steps:
      - name: Sjekk ut kode
        uses: actions/checkout@v2

      - name: Deploy til dev-fss
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: naiserator.yaml
          PRINT_PAYLOAD: true
          VARS: nais/dev-fss.json

  deploy-dev-sbs:
    name: Deploy til dev-sbs
    runs-on: ubuntu-latest
    needs: bygg
    steps:
      - name: Sjekk ut kode
        uses: actions/checkout@v2

      - name: Deploy til dev-sbs
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-sbs
          RESOURCE: naiserator.yaml
          PRINT_PAYLOAD: true
          VARS: nais/dev-sbs.json

  deploy-prod-fss:
    name: Deploy til prod-fss
    runs-on: ubuntu-latest
    needs: bygg
    steps:
      - name: Sjekk ut kode
        uses: actions/checkout@v2

      - name: Deploy til prod-fss
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: naiserator.yaml
          PRINT_PAYLOAD: true
          VARS: nais/prod-fss.json

  deploy-prod-sbs:
    name: Deploy til prod-sbs
    runs-on: ubuntu-latest
    needs: bygg
    steps:
      - name: Sjekk ut kode
        uses: actions/checkout@v2

      - name: Deploy til prod-sbs
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-sbs
          RESOURCE: naiserator.yaml
          PRINT_PAYLOAD: true
          VARS: nais/prod-sbs.json

  deploy-labs-gcp:
    name: Deploy til labs-gcp
    runs-on: ubuntu-latest
    needs: bygg
    steps:
      - name: Sjekk ut kode
        uses: actions/checkout@v2

      - name: Deploy til labs-gcp
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: labs-gcp
          RESOURCE: naiserator.yaml
          PRINT_PAYLOAD: true
          VARS: nais/labs-gcp.json